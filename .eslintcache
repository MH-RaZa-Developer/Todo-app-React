[{"D:\\Jhankar Mahbub Class Practice\\todo-app\\src\\index.js":"1","D:\\Jhankar Mahbub Class Practice\\todo-app\\src\\App.js":"2","D:\\Jhankar Mahbub Class Practice\\todo-app\\src\\reportWebVitals.js":"3","D:\\Jhankar Mahbub Class Practice\\todo-app\\src\\Todo.js":"4","D:\\Jhankar Mahbub Class Practice\\todo-app\\src\\firebase.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":1900,"mtime":1612109819051,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":3178,"mtime":1612108655863,"results":"10","hashOfConfig":"7"},{"size":435,"mtime":1612032652713,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1bjhkwl",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"D:\\Jhankar Mahbub Class Practice\\todo-app\\src\\index.js",[],["24","25"],"D:\\Jhankar Mahbub Class Practice\\todo-app\\src\\App.js",[],"D:\\Jhankar Mahbub Class Practice\\todo-app\\src\\reportWebVitals.js",[],"D:\\Jhankar Mahbub Class Practice\\todo-app\\src\\Todo.js",["26"],"import { Avatar, Button, FormControl, Input, InputLabel, List, ListItem, ListItemAvatar, ListItemText, Modal } from '@material-ui/core';\r\nimport ListAltRoundedIcon from '@material-ui/icons/ListAltRounded';\r\nimport React, { useState } from 'react';\r\nimport './Todo.css';\r\nimport db from './firebase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport firebase from 'firebase';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      width: 350,\r\n      textAlign: 'center',\r\n      margin: 'auto',\r\n      marginTop: '150px',\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\n\r\nconst Todo = (props) => {\r\n\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const [input, setInput] = useState();\r\n\r\n    const updateTodo = (event) =>{\r\n\r\n        db.collection('todos').doc(props.todo.id).set({\r\n            todo: input\r\n        }, {merge: true});\r\n        setInput('');\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Modal\r\n            open={open}\r\n            onClose={false}\r\n        >\r\n            <div className={classes.paper}>\r\n                <h1>Update Your Todo</h1>\r\n                <FormControl>\r\n                <InputLabel>Write New Todo...</InputLabel>\r\n                <Input value={input} onChange={e => setInput(e.target.value)}/>\r\n                </FormControl>\r\n                <br />\r\n                <Button disabled={!input} onClick={updateTodo} style={{marginTop:'10px'}} color=\"primary\" variant=\"contained\" size=\"small\">Update</Button> \r\n                <Button style={{marginLeft: '10px', marginTop: '10px'}} color=\"secondary\" variant=\"contained\" size=\"small\" onClick={e => setOpen(false)}>Cancel</Button>\r\n            </div>\r\n        </Modal>\r\n\r\n        <div className=\"todo_list\">\r\n            <List className=\"list\">\r\n                <ListItem>\r\n                    <ListItemAvatar>\r\n                    <Avatar style={{background:'black'}}>\r\n                        <ListAltRoundedIcon style={{color:'#0652DD'}} />\r\n                    </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary={props.todo.todo} secondary=\"Todo\" />\r\n                </ListItem>\r\n                <Tooltip title=\"Delete\" placement=\"top\">\r\n                    <IconButton size=\"medium\">\r\n                        <DeleteIcon color=\"secondary\" onClick={() => db.collection('todos').doc(props.todo.id).delete()} />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Update\" placement=\"top\">\r\n                    <IconButton size=\"medium\">\r\n                        <UpdateIcon color=\"primary\" onClick={() => setOpen(true)} />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </List>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Todo;","D:\\Jhankar Mahbub Class Practice\\todo-app\\src\\firebase.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":11,"column":8,"nodeType":"33","messageId":"34","endLine":11,"endColumn":16},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]